<objdefs appVersion="1.0.9">
   <obj.normal id="octaveShift" uuid="fdfd3e78-2e1b-4942-b027-65c98f6f7e87">
      <sDescription>octave shifter</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>math.axh</helpPatch>
      <inlets>
         <frac32 name="a" description="a"/>
         <bool32 name="up"/>
         <bool32 name="down"/>
      </inlets>
      <outlets>
         <frac32 name="result" description="a+1"/>
         <bool32 name="trig"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int _state;
bool _busy;
int _highthres = 6;
int _lowthres = -4;
int _delay;
bool _trig;]]></code.declaration>
      <code.init><![CDATA[_state = 0;
_busy = 0;
_delay = 0;
_trig = 0;]]></code.init>
      <code.krate><![CDATA[if(_busy == 0 && _delay > 1000)
{
	if((inlet_up == 1) && (_state+1<_highthres))
	{
		if(inlet_down == 1)
		{
			_trig=1;
		}
		else
			{
			_state = _state+1;
			_busy = 1;
			_delay = 0;
	
			LogTextMessage("%d",_state);
		}
	}
	if((inlet_down == 1) && (_state-1>_lowthres))
	{
		_state = _state-1;
		_busy = 1;
		_delay = 0;
		
		LogTextMessage("%d",_state);
	}
	
}
else
{
	if((inlet_up == 0) && (inlet_down == 0))
	{
		_busy = 0;
		_trig=0;
	}
}
_delay++;
//outlet_result= inlet_a+((12*_state)<<21);
outlet_result= ((12*_state)<<21);
outlet_trig=_trig;]]></code.krate>
   </obj.normal>
</objdefs>