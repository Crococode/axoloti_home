<patch-1.0 appVersion="1.0.10">
   <obj type="gpio/serial/config" sha="f0df278a5fd5140e32239828049a8e062059f391" name="serial.begin_1" x="28" y="14">
      <params/>
      <attribs>
         <combo attributeName="baudrate" selection="31250"/>
      </attribs>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_1" x="336" y="28">
      <params>
         <frac32.u.map name="value" value="1.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="hug/math/octaveShift" uuid="fdfd3e78-2e1b-4942-b027-65c98f6f7e87" name="octaveShift_1" x="420" y="28">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/out left" uuid="b11a3c09b2fdd575ea8212f2ce7743d5269253b1" name="out_1" x="826" y="28">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_1" x="196" y="98">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB6"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_1" x="434" y="112">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_1" x="518" y="112">
      <params/>
      <attribs/>
   </obj>
   <obj type="wave/play fn" uuid="25910f7130532e4934eed3cf2a934324790d0f00" name="play_1" x="602" y="112">
      <params/>
      <attribs>
         <file attributeName="fn" file="sos.wav"/>
      </attribs>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_1" x="308" y="126">
      <params/>
      <attribs/>
   </obj>
   <obj type="script/script2" sha="1478c410b77725959c034de4a2456dd1198e9080" name="script2_1" x="28" y="154">
      <params/>
      <attribs>
         <text attributeName="script">
            <sText><![CDATA[uint8_t StatusToMsgLength(uint8_t t){
	switch(t) {
	case 0x0:
	case 0x1:
	case 0x2:
	case 0x3:
	case 0x4:
	case 0x5:
	case 0x6:
	case 0x7:
		return 0;
	case 0x8:
	case 0x9:
	case 0xa:
	case 0xb:
		return 3;
	case 0xc:
	case 0xd:
		return 2;
	case 0xe:
		return 3;
	default:
		return -1;
	}
}

uint8_t SysToMsgLength(uint8_t t){
    switch(t) {
	case 0x0:
		return -1; // 0xf0=sysex start. may vary
	case 0x1:
		return 2; // 0xf1=MIDI Time Code. 2 bytes
	case 0x2:
		return 3; // 0xf2=MIDI Song position. 3 bytes
	case 0x3:
		return 2; // 0xf3=MIDI Song Select. 2 bytes.
	case 0x4:
		return 1; // 0xf4=undefined
	case 0x5:
		return 1; // 0xf5=undefined
	case 0x6:
		return 1; // 0xf6=TUNE Request
	case 0x7:
		return 1; // 0xf7=sysex end.
	case 0x8:
		return 1; // 0xf8=timing clock. 1 byte
	case 0x9:
		return 1; // 0xf9=proposed measure end?
	case 0xa:
		return 1; // 0xfa=start. 1 byte
	case 0xb:
		return 1; // 0xfb=continue. 1 byte
	case 0xc:
		return 1; // 0xfc=stop. 1 byte
	case 0xd:
		return 1; // 0xfd=undefined
	case 0xe:
		return 1; // 0xfe=active sensing. 1 byte
	case 0xf:
	default:
		return 3; // 0xff= not reset, but a META-EVENT, which is always 3 bytes
	}
}


unsigned char MidiByte0;
unsigned char MidiByte1;
unsigned char MidiByte2;
unsigned char MidiCurData;
unsigned char MidiNumData;

uint8_t port = 1;

void setup(){
  MidiNumData = 0;
  MidiCurData = 0;
}


void MidiInByteHandler(uint8_t data) {
  int8_t len;
  if (data & 0x80) {
    len = StatusToMsgLength(data >> 4);
    if (len == -1) {
      len = SysToMsgLength(data - 0xF0);
    }
    if (len == 1) {
      MidiInMsgHandler(MIDI_DEVICE_DIN,port,data,0,0);
    } else {
      MidiByte0 = data;
      MidiNumData = len - 1;
      MidiCurData = 0;
    }
  }
  else // not a status byte
  {
    if (MidiCurData == 0) {
      MidiByte1 = data;
      if (MidiNumData == 1) {
        // 2 byte message complete
        MidiInMsgHandler(MIDI_DEVICE_DIN,port,MidiByte0, MidiByte1,0);
        //MidiInMsgHandler(MidiByte0, MidiByte1, 0);
        MidiCurData = 0;
      }
      else
        MidiCurData++;
    }
    else if (MidiCurData == 1) {
      MidiByte2 = data;
      if (MidiNumData == 2) {
      	MidiInMsgHandler(MIDI_DEVICE_INTERNAL,port,MidiByte0, MidiByte1, MidiByte2);
        //MidiInMsgHandler(MidiByte0, MidiByte1, MidiByte2);
        MidiCurData = 0;
      }
    }
  }
}
void loop(){
    char ch = sdGet(&SD2);
    MidiInByteHandler(ch);	
}]]></sText>
         </text>
      </attribs>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_3" x="532" y="168">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_2" x="196" y="182">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB7"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_2" x="308" y="182">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_2" x="434" y="182">
      <params/>
      <attribs/>
   </obj>
   <obj type="./../korg/OctaveShift_noWav2_extraMidi_dev" uuid="5e94f4d5-3918-403a-bc74-5832ff34c74e" name="OctaveShift_noWav2_extraMidi_dev_1" x="406" y="266">
      <params/>
      <attribs>
         <combo attributeName="poly" selection="4"/>
         <combo attributeName="midichannel" selection="inherit"/>
         <combo attributeName="mididevice" selection="omni"/>
         <combo attributeName="midiport" selection="1"/>
      </attribs>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_3" x="714" y="294">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="digital_1" outlet="out"/>
         <dest obj="inv_2" inlet="i"/>
      </net>
      <net>
         <source obj="digital_2" outlet="out"/>
         <dest obj="inv_1" inlet="i"/>
      </net>
      <net>
         <source obj="inv_1" outlet="o"/>
         <dest obj="octaveShift_1" inlet="up"/>
         <dest obj="and_1" inlet="i1"/>
         <dest obj="bool_1" inlet="in"/>
      </net>
      <net>
         <source obj="inv_2" outlet="o"/>
         <dest obj="bool_2" inlet="in"/>
         <dest obj="octaveShift_1" inlet="down"/>
         <dest obj="and_1" inlet="i2"/>
      </net>
      <net>
         <source obj="octaveShift_1" outlet="result"/>
         <dest obj="OctaveShift_noWav2_extraMidi_dev_1" inlet="inlet_1"/>
      </net>
      <net>
         <source obj="dial_1" outlet="out"/>
         <dest obj="octaveShift_1" inlet="a"/>
      </net>
      <net>
         <source obj="inv_3" outlet="o"/>
         <dest obj="play_1" inlet="stop"/>
      </net>
      <net>
         <source obj="play_1" outlet="out"/>
         <dest obj="out_1" inlet="wave"/>
      </net>
      <net>
         <source obj="and_1" outlet="o"/>
         <dest obj="play_1" inlet="start"/>
         <dest obj="inv_3" inlet="i"/>
      </net>
      <net>
         <source obj="OctaveShift_noWav2_extraMidi_dev_1" outlet="outlet_1"/>
         <dest obj="bool_3" inlet="in"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>55</x>
      <y>48</y>
      <width>1000</width>
      <height>661</height>
   </windowPos>
</patch-1.0>